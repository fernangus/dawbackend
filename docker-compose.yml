services:
  # Contenedor para la base de datos MySQL en producción
  db:
    image: mysql:8.0.35-debian  # Imagen oficial de MySQL
    container_name: fernangus-db  # Nombre del contenedor de MySQL en producción
    ports:
      - "3307:3306"  # Exponemos el puerto 3306 de MySQL en el puerto 3307 del host    
    restart: always  # Reinicia el contenedor automáticamente si se detiene
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  # Carga la variable desde .env
      - MYSQL_USER=${MYSQL_USER}  # Carga la variable desde .env
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}  # Carga la variable desde .env
      - MYSQL_DATABASE=${MYSQL_DATABASE}  # Carga la variable desde .env
    volumes:
      - ./config/prod/mysql_dump:/docker-entrypoint-initdb.d  # Dump para producción
      - mysql-data:/var/lib/mysql  # Volumen para persistencia de datos

  # Contenedor para la aplicación en Apache en producción
  app:
    build:
      context: .  # Ruta del contexto para construir la imagen
      dockerfile: Dockerfile  # Usamos Dockerfile para producción
    container_name: fernangus-api  # Nombre del contenedor de la app en producción
    restart: always  # Reinicia el contenedor automáticamente
    volumes:
      - ./app:/var/www/html/app  # Montamos el código de la aplicación
      - ./config/prod/virtualhost/fernangus.api.chickenkiller.com.conf:/etc/apache2/sites-enabled/fernangus.api.chickenkiller.com.conf  # Configuración de VirtualHost en producción
    ports:
      - "8080:80"  # Exponemos el puerto 80 de Apache en el puerto 8080
    depends_on:
      - db  # La aplicación depende de MySQL

volumes:
  mysql-data:  # Volumen para persistir datos de MySQL
